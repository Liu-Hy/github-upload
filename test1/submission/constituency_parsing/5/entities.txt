2	0	48	In- Order Transition - based Constituent Parsing
9	18	24	system
9	25	33	achieves
9	34	42	93.6 F 1
9	43	47	with
9	48	68	supervised reranking
9	73	81	94.2 F 1
9	82	86	with
9	87	112	semi-supervised reranking
11	0	38	Transition - based constituent parsing
11	39	46	employs
32	19	26	propose
32	29	52	novel transition system
32	53	56	for
32	57	76	constituent parsing
32	79	89	mitigating
32	90	96	issues
32	97	99	of
32	105	139	bottom - up and top - down systems
32	140	150	by finding
32	153	163	compromise
32	164	171	between
32	172	207	bottom - up constituent information
32	212	244	top - down lookahead information
49	23	69	https://github.com/LeonCrashCode/InOrderParser
116	0	2	is
116	5	47	regularization hyperparameter (? = 10 ?6 )
116	53	56	use
116	57	84	stochastic gradient descent
116	85	89	with
116	92	121	0.1 initialized learning rate
116	122	126	with
116	129	153	0.05 learning rate decay
133	4	22	bottom - up system
133	23	31	performs
133	32	47	slightly better
133	48	52	than
133	57	74	top - down system
134	4	18	inorder system
134	19	30	outperforms
134	40	77	bottom - up and the top - down system
135	26	28	on
135	33	53	English test dataset
136	3	12	find that
136	17	61	bottom - up parser and the top - down parser
136	62	66	have
136	67	82	similar results
136	83	88	under
136	93	107	greedy setting
136	118	135	in - order parser
136	136	147	outperforms
137	7	11	with
137	12	32	supervised reranking
137	39	56	in - order parser
137	57	65	achieves
137	70	82	best results
138	0	27	English constituent results
140	0	4	With
140	9	34	fully - supervise setting
140	43	57	inorder parser
140	58	69	outperforms
140	74	112	state - of - the - art discrete parser
140	119	156	state - of - the - art neural parsers
145	0	26	Chinese dependency results
147	0	7	UAS LAS
170	4	21	in - order parser
170	22	30	performs
170	35	39	best
170	40	42	on
170	43	64	all constituent types
