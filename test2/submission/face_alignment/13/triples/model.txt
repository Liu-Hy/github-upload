(two network decoders||instead of||two PCA spaces)
(two PCA spaces||as||shape and texture model components)
(Model||utilize||two network decoders)
(different networks||for||shape and texture)
(multi - layer perceptron ( MLP )||for||shape)
(multi - layer perceptron ( MLP )||for||texture)
(convolutional neural network ( CNN )||for||texture)
(multi - layer perceptron ( MLP )||for||shape)
(convolutional neural network ( CNN )||for||texture)
(Model||design||different networks)
(Each decoder||take||shape or texture representation)
(shape or texture representation||as||input)
(Each decoder||output||dense 3 D face or a face texture)
(Each decoder||output||face texture)
(Model||has||Each decoder)
(fitting algorithm||to||nonlinear 3 DMM)
(nonlinear 3 DMM||formulated as||CNN encoder)
(fitting algorithm||has||nonlinear 3 DMM)
(Model||learn||fitting algorithm)
(encoder||takes||2 D face image)
(2 D face image||as||input)
(encoder||generates||shape and texture parameters)
(shape and texture parameters||from||two decoders)
(two decoders||estimate||3D face and texture)
(Model||has||encoder)
(3 D face and texture||perfectly reconstruct||input face)
(input face||if||fitting algorithm)
(Model||has||3 D face and texture)
(differentiable rendering layer||to generate||reconstructed face)
(reconstructed face||by fusing||3D face , texture , and the camera projection parameters)
(3D face , texture , and the camera projection parameters||estimated by||encoder)
(Model||design||differentiable rendering layer)
(endto - end learning scheme||where||encoder and two decoders)
(encoder and two decoders||to minimize||difference)
(learnt jointly||to minimize||difference)
(difference||between||reconstructed face and the input face)
(Model||has||endto - end learning scheme)
(large collection of unconstrained 2D images||without relying on||3D scans)
(Model||Jointly learning||3 DMM and the model fitting encoder)
(Contribution||has||Model)
